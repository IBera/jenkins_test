

node('terraform'){

    /*parameters {
		string(name: 'AZURE_KEYVAULT_URL', description: 'Name of the image to build')
	}*/

    stage('test'){
        sh "terraform -version"
        sh "pwd"
        sh "ls -ll"
    }

    stage('Terraform Init'){
        

        azureKeyVault(
        credentialID: "azure_service_principal",
        //keyVaultURL: "${params.AZURE_KEYVAULT_URL}",
        keyVaultURL: "https://kv-devopsigb-prod-france.vault.azure.net/",
        secrets: [
            [envVariable: 'BACKEND_STORAGE_ACCOUNT_NAME', name: 'BACKEND-STORAGE-ACCOUNT-NAME', secretType: 'Secret'],
            [envVariable: 'BACKEND_STORAGE_ACCOUNT_CONTAINER_NAME', name: 'BACKEND-STORAGE-ACCOUNT-CONTAINER-NAME', secretType: 'Secret'],
            [envVariable: 'BACKEND_KEY', name: 'BACKEND-KEY', secretType: 'Secret'],
            [envVariable: 'RG_NAME', name: 'RG-NAME', secretType: 'Secret'],
            [envVariable: 'ARM_ACCESS_KEY', name: 'BACKEND-ACCESS-KEY', secretType: 'Secret']
        ]
        )


        steps {
                ansiColor('xterm') {
                withCredentials([azureServicePrincipal(
                    credentialsId: 'azure_service_principal',
                    subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID',
                    clientIdVariable: 'ARM_CLIENT_ID',
                    clientSecretVariable: 'ARM_CLIENT_SECRET',
                    tenantIdVariable: 'ARM_TENANT_ID'
                )]) {
                        dir("src") {
                            sh """
                            echo "Initialising Terraform"
                            terraform init -backend-config="access_key=$ARM_ACCESS_KEY" -backend-config="storage_account_name=$BACKEND_STORAGE_ACCOUNT_NAME" -backend-config="container_name=$BACKEND_STORAGE_ACCOUNT_CONTAINER_NAME" -backend-config="key=$BACKEND_KEY" -backend-config="resource_group_name=$RG_NAME"
                            """
                        }
                    }
            }
        }
    }
}